// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 256 rows (indexed 0..255, top to bottom)
 * of 512 pixels each (indexed 0..511, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
    static boolean color;

    /** Initializes the Screen. */
    function void init() {
        return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
        var int address;
        let address = 16384; // base address of screen map
        while (address < 24577) {
            Memory.poke(address, 0); // makes each pixel white
        }
        return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
        return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
        var int address;
        var int value;
        var int bit;
        var int i;
        var int twoToThe;
        let address = (32 * y) + (x / 16);
        let value = Memory.peek(address);

        let bit = x - (16 * (x / 16)); // gets x % 16 bit
        let twoToThe = 1;
        while(i < bit) {
            let i = i + 1;
            let twoToThe = twoToThe * 2;
        }
        let val = val + twoToThe;
        do Memory.poke(address, value);
        return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
        return;
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
        do Screen.drawLine(x1, y1, x2, y1); // -----
        do Screen.drawLine(x2, y1, x2, y2); //     |
        do Screen.drawLine(x2, y2, x1, y2); // -----    
        do Screen.drawLine(x1, y2, x1, y1); // |
        return;
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
        return;
    }

    /** Sets bit of word */
    function int setBit() {
        return;
    }
}
